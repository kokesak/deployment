# Copyright Contributors to the Packit project.
# SPDX-License-Identifier: MIT

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: tokman
  annotations:
    # https://docs.openshift.com/container-platform/4.11/openshift_images/triggering-updates-on-imagestream-changes.html
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"tokman:{{ deployment }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"tokman\")].image"}]
{% if managed_platform %}
  labels:
    app-code: "{{ appcode }}"
    service-phase: "{{ servicephase }}"
    cost-center: "{{ costcenter }}"
{% endif %}
spec:
  selector:
    matchLabels:
      component: tokman
  template:
    metadata:
      labels:
        component: tokman
{% if managed_platform %}
        paas.redhat.com/appcode: {{ appcode }}
{% endif %}
    spec:
      volumes:
        - name: github-app-private-key
          secret:
            secretName: github-app-private-key
        - name: tokman-config
          configMap:
            name: tokman-config
        - name: access-tokens
          persistentVolumeClaim:
            claimName: access-tokens-pvc
      containers:
        - name: tokman
          image: tokman:{{ deployment }}
          env:
            - name: DEPLOYMENT
              value: {{ deployment }}
            - name: LOG_LEVEL
              value: DEBUG
            - name: WORKERS
              value: "{{ tokman.workers }}"
            - name: TOKMAN_CONFIG
              value: /etc/config/config.py
            - name: BIND_ADDR
              value: "0.0.0.0:8000"
            - name: SENTRY_SECRET
              valueFrom: {secretKeyRef: {name: sentry, key: dsn}}
          volumeMounts:
            - name: github-app-private-key
              mountPath: /secrets
              readOnly: true
            - name: tokman-config
              mountPath: /etc/config
              readOnly: true
            - name: access-tokens
              mountPath: /access_tokens
          resources: {{ tokman.resources }}
          ports:
            - containerPort: 8000
              protocol: "TCP"
          startupProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 15
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            timeoutSeconds: 2
            periodSeconds: 20
  replicas: 1
  strategy:
    type: Recreate
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tokman-config
data:
  config.py: |-
    SQLALCHEMY_DATABASE_URI = "sqlite:////access_tokens/access_tokens.db"
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    GITHUB_APP_ID = {{ vault.packit_service.authentication["github.com"].github_app_id }}
    GITHUB_APP_PRIVATE_KEY = "/secrets/private-key.pem"
    TOKEN_RENEW_AT = 60
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: tokman
spec:
  tags:
    - name: {{ deployment }}
      from:
        kind: DockerImage
        name: {{ image_tokman }}
      importPolicy:
        # Periodically query registry to synchronize tag and image metadata.
        scheduled: {{ auto_import_images }}
  lookupPolicy:
    # allows all resources pointing to this image stream to use it in the image field
    local: true
---
apiVersion: v1
kind: Service
metadata:
  name: tokman
{% if managed_platform %}
  labels:
    paas.redhat.com/appcode: {{ appcode }}
{% endif %}
spec:
  ports:
    - name: tokman
      port: 80
      protocol: TCP
      targetPort: 8000
  selector:
    component: tokman
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: access-tokens-pvc
{% if managed_platform %}
  labels:
    paas.redhat.com/appcode: {{ appcode }}
  annotations:
    kubernetes.io/reclaimPolicy: Delete
{% endif %}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
{% if managed_platform %}
  storageClassName: aws-ebs
{% endif %}
